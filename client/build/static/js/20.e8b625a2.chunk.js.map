{"version":3,"file":"static/js/20.e8b625a2.chunk.js","mappings":"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","sources":["components/Template/SingleTemplate.jsx"],"sourcesContent":["//External Import\r\nimport { forwardRef, useRef } from \"react\";\r\nimport {\r\n  AiFillPhone,\r\n  AiOutlineHome,\r\n  AiOutlinePrinter,\r\n  AiOutlineEye,\r\n} from \"react-icons/ai\";\r\nimport { BiEnvelope, BiArrowBack } from \"react-icons/bi\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst SingleTemplate = () => {\r\n  const componentRef = useRef();\r\n  const { id } = useParams();\r\n  const { TemplateList } = useSelector((state) => state.Template);\r\n  const { UserDetails } = useSelector((state) => state.User);\r\n\r\n  return (\r\n    <section className=\"min-h-screen bg-gray-50 dark:bg-gray-900  py-10\">\r\n      <div className=\"w-[800px] m-auto\">\r\n        <div className=\"flex justify-end mx-[-30px] mb-4\">\r\n          <Link to=\"/template\">\r\n            <BiArrowBack className=\"text-[24px] ml-4 dark:text-white  block\" />\r\n          </Link>\r\n\r\n          <ReactToPrint\r\n            trigger={() => (\r\n              <AiOutlinePrinter className=\"text-[24px] ml-4 dark:text-white  block cursor-pointer\" />\r\n            )}\r\n            content={() => componentRef.current}\r\n          />\r\n        </div>\r\n\r\n        {id === \"1\" ? (\r\n          <SingleTemplateOne UserDetails={UserDetails} ref={componentRef} />\r\n        ) : (\r\n          <SingleTemplateTwo UserDetails={UserDetails} ref={componentRef} />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SingleTemplate;\r\n\r\nconst SingleTemplateOne = forwardRef(({ UserDetails }, ref) => {\r\n  console.log(UserDetails);\r\n\r\n  return (\r\n    <div className=\"w-[800px] m-auto\" ref={ref}>\r\n      <div className=\"flex mx-[-15px] bg-[#151b29] text-[white]\">\r\n        <div className=\"px-[15px] w-full\">\r\n          <div className=\"p-5 text-center\">\r\n            <img\r\n              src=\"https://res.cloudinary.com/dtcoomque/image/upload/v1663317145/vz7iz88hfniwxejirvjw.png\"\r\n              className=\"w-[150px] rounded-[50%] mx-auto\"\r\n              alt=\"user\"\r\n            />\r\n            <p className=\"text-white text-[40px] mt-3\">\r\n              {UserDetails?.FullName}\r\n            </p>\r\n            <p className=\"text-white text-xl mt-2\">{UserDetails?.Dejection}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex mx-[-15px]  text-[#7b7b7b] bg-white\">\r\n        <div className=\"px-[15px] w-full md:w-5/12\">\r\n          <div className=\"p-5\">\r\n            <p className=\"text-lg uppercase font-semibold my-5 text-[#151b29]\">\r\n              Contact\r\n            </p>\r\n\r\n            {UserDetails?.Phone && (\r\n              <p>\r\n                <AiFillPhone className=\"inline\" /> &nbsp;&nbsp;\r\n                {UserDetails?.Phone}\r\n              </p>\r\n            )}\r\n\r\n            {UserDetails?.Email && (\r\n              <p>\r\n                <BiEnvelope className=\"inline\" /> &nbsp;&nbsp;\r\n                {UserDetails?.Email}\r\n              </p>\r\n            )}\r\n\r\n            {UserDetails?.Address && (\r\n              <>\r\n                <p>\r\n                  <AiOutlineHome className=\"inline\" /> &nbsp;&nbsp;\r\n                  {UserDetails?.Address}\r\n                </p>\r\n                <br />\r\n              </>\r\n            )}\r\n\r\n            {UserDetails?.Skills.length !== 0 && (\r\n              <>\r\n                <p className=\"text-lg uppercase font-semibold my-5 text-[#151b29]\">\r\n                  my skills\r\n                </p>\r\n                <ul className=\"skills\">\r\n                  {UserDetails?.Skills.map((skill, index) => {\r\n                    return (\r\n                      <li key={index}>\r\n                        <span>{skill.Technology}</span>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n                <br />\r\n              </>\r\n            )}\r\n\r\n            {UserDetails?.Education.length !== 0 && (\r\n              <>\r\n                <p className=\"text-lg uppercase font-semibold my-5 text-[#151b29]\">\r\n                  Education\r\n                </p>\r\n                {UserDetails?.Education.map((edu, index) => {\r\n                  return (\r\n                    <>\r\n                      <p className=\"text-sm my-3\">\r\n                        Qualification : {edu.Qualification} ({edu.YearRange}){\" \"}\r\n                        <br />\r\n                        Institution : {edu.Institution}\r\n                      </p>\r\n                    </>\r\n                  );\r\n                })}\r\n                <br />\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"px-[15px] w-full md:w-7/12\">\r\n          <div className=\"content-box\">\r\n            <p className=\"text-lg uppercase font-semibold my-5 text-[#151b29]\">\r\n              Carrier Objective\r\n            </p>\r\n            <p className=\"text-sm\">\r\n              {UserDetails && parse(UserDetails?.CarrierObjective)}\r\n            </p>\r\n            <br />\r\n\r\n            {UserDetails?.Experience.length !== 0 && (\r\n              <>\r\n                <p className=\"text-lg uppercase font-semibold my-5 text-[#151b29]\">\r\n                  Employment Records:\r\n                </p>\r\n                {UserDetails?.Experience.map((skill, index) => {\r\n                  return (\r\n                    <>\r\n                      <a\r\n                        href={skill.Website}\r\n                        target=\"_black\"\r\n                        className=\"text-purple-900\"\r\n                      >\r\n                        {skill.Company}\r\n                      </a>\r\n                      <p className=\"text-sm my-3\">Address: {skill.Place}</p>\r\n                      <p className=\"text-sm my-3\">\r\n                        Year Range: {skill.YearRange}\r\n                      </p>\r\n                    </>\r\n                  );\r\n                })}\r\n                <br />\r\n              </>\r\n            )}\r\n\r\n            {UserDetails?.Projects.length !== 0 && (\r\n              <>\r\n                <p className=\"text-lg uppercase font-semibold my-5 text-[#151b29]\">\r\n                  Project\r\n                </p>\r\n                {UserDetails?.Projects.map((project, index) => {\r\n                  return (\r\n                    <>\r\n                      <p className=\"text-md uppercase font-normal text-[#151b29]\">\r\n                        {project.Title} ({project.YearRange}){\" \"}\r\n                        <a href={project.Link} target=\"_blank\">\r\n                          <AiOutlineEye className=\"inline\" />\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"text-sm my-3\">\r\n                        Description: {project.Description}\r\n                      </p>\r\n                      <p className=\"text-sm my-3\">\r\n                        Year Range: {project.YearRange}\r\n                      </p>\r\n                    </>\r\n                  );\r\n                })}\r\n                <br />\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst SingleTemplateTwo = forwardRef(({ UserDetails }, ref) => {\r\n  return (\r\n    <div className=\"w-[800px] m-auto\" ref={ref}>\r\n      <div className=\"flex mx-[-15px] text-[#7b7b7b] bg-white\">\r\n        <div className=\"px-[15px] w-full\">\r\n          <div className=\"p-5 text-center\">\r\n            <img\r\n              src=\"https://res.cloudinary.com/dtcoomque/image/upload/v1663317145/vz7iz88hfniwxejirvjw.png\"\r\n              className=\"w-[150px] rounded-[50%] mx-auto\"\r\n              alt=\"user\"\r\n            />\r\n            <p className=\"text-[#151b29] text-[40px] mt-3\">\r\n              {UserDetails?.FullName}\r\n            </p>\r\n            <p className=\"text-[#151b29] text-xl mt-2\">\r\n              {UserDetails?.Dejection}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex mx-[-15px]  bg-[#151b29] text-[white]\">\r\n        <div className=\"px-[15px] w-full md:w-5/12\">\r\n          <div className=\"p-5\">\r\n            <p className=\"text-lg uppercase font-semibold my-5 text-[white]\">\r\n              Contact\r\n            </p>\r\n\r\n            {UserDetails?.Phone && (\r\n              <p>\r\n                <AiFillPhone className=\"inline\" /> &nbsp;&nbsp;\r\n                {UserDetails?.Phone}\r\n              </p>\r\n            )}\r\n\r\n            {UserDetails?.Email && (\r\n              <p>\r\n                <BiEnvelope className=\"inline\" /> &nbsp;&nbsp;\r\n                {UserDetails?.Email}\r\n              </p>\r\n            )}\r\n\r\n            {UserDetails?.Address && (\r\n              <>\r\n                <p>\r\n                  <AiOutlineHome className=\"inline\" /> &nbsp;&nbsp;\r\n                  {UserDetails?.Address}\r\n                </p>\r\n                <br />\r\n              </>\r\n            )}\r\n\r\n            {UserDetails?.Skills.length !== 0 && (\r\n              <>\r\n                <p className=\"text-lg uppercase font-semibold my-5 text-[white]\">\r\n                  my skills\r\n                </p>\r\n                <ul className=\"skills\">\r\n                  {UserDetails?.Skills.map((skill, index) => {\r\n                    return (\r\n                      <li key={index}>\r\n                        <span>{skill.Technology}</span>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n                <br />\r\n              </>\r\n            )}\r\n\r\n            {UserDetails?.Education.length !== 0 && (\r\n              <>\r\n                <p className=\"text-lg uppercase font-semibold my-5 text-[white]\">\r\n                  Education\r\n                </p>\r\n                {UserDetails?.Education.map((edu, index) => {\r\n                  return (\r\n                    <>\r\n                      <p className=\"text-sm my-3\">\r\n                        Qualification : {edu.Qualification} ({edu.YearRange}){\" \"}\r\n                        <br />\r\n                        Institution : {edu.Institution}\r\n                      </p>\r\n                    </>\r\n                  );\r\n                })}\r\n                <br />\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"px-[15px] w-full md:w-7/12\">\r\n          <div className=\"content-box\">\r\n            <p className=\"text-lg uppercase font-semibold my-5 text-[white]\">\r\n              Carrier Objective\r\n            </p>\r\n            <p className=\"text-sm\">\r\n              {UserDetails && parse(UserDetails?.CarrierObjective)}\r\n            </p>\r\n            <br />\r\n\r\n            {UserDetails?.Experience.length !== 0 && (\r\n              <>\r\n                <p className=\"text-lg uppercase font-semibold my-5 text-[white]\">\r\n                  Employment Records:\r\n                </p>\r\n                {UserDetails?.Experience.map((skill, index) => {\r\n                  return (\r\n                    <>\r\n                      <a\r\n                        href={skill.Website}\r\n                        target=\"_black\"\r\n                        className=\"text-[#1c64f2]\"\r\n                      >\r\n                        {skill.Company}\r\n                      </a>\r\n                      <p className=\"text-sm my-3\">Address: {skill.Place}</p>\r\n                      <p className=\"text-sm my-3\">\r\n                        Year Range: {skill.YearRange}\r\n                      </p>\r\n                    </>\r\n                  );\r\n                })}\r\n                <br />\r\n              </>\r\n            )}\r\n\r\n            {UserDetails?.Projects.length !== 0 && (\r\n              <>\r\n                <p className=\"text-lg uppercase font-semibold my-5 text-[white]\">\r\n                  Project\r\n                </p>\r\n                {UserDetails?.Projects.map((project, index) => {\r\n                  return (\r\n                    <>\r\n                      <p className=\"text-md uppercase font-normal text-[white]\">\r\n                        {project.Title} ({project.YearRange}){\" \"}\r\n                        <a href={project.Link} target=\"_blank\">\r\n                          <AiOutlineEye className=\"inline\" />\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"text-sm my-3\">\r\n                        Description: {project.Description}\r\n                      </p>\r\n                      <p className=\"text-sm my-3\">\r\n                        Year Range: {project.YearRange}\r\n                      </p>\r\n                    </>\r\n                  );\r\n                })}\r\n                <br />\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n"],"names":["componentRef","useRef","id","useParams","UserDetails","useSelector","state","Template","TemplateList","User","className","to","trigger","content","current","SingleTemplateOne","ref","SingleTemplateTwo","forwardRef","console","log","src","alt","FullName","Dejection","Phone","Email","Address","Skills","length","map","skill","index","Technology","Education","edu","Qualification","YearRange","Institution","parse","CarrierObjective","Experience","href","Website","target","Company","Place","Projects","project","Title","Link","Description"],"sourceRoot":""}