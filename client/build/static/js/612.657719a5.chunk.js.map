{"version":3,"file":"static/js/612.657719a5.chunk.js","mappings":"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","sources":["APIRequest/AuthRequest.js","components/Auth/RegisterUser.jsx","helper/FormValidation.js"],"sourcesContent":["//Internal Import\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetLogin } from \"../redux/slices/AuthSlice\";\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\n\r\nclass AuthRequest {\r\n  static async RegisterUser(postBody) {\r\n    const { data } = await RestClient.postRequest(\r\n      \"/Auth/RegisterUser\",\r\n      postBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      SessionHelper.SetVerifyEmail(postBody.Email);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async LoginUser(postBody) {\r\n    const { data } = await RestClient.postRequest(\"/Auth/LoginUser\", postBody);\r\n\r\n    if (data) {\r\n      store.dispatch(SetLogin(data?.accessToken));\r\n      ToastMessage.successMessage(\"User Login Successfull\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default AuthRequest;\r\n","//External Import\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\n//Internal Import\r\nimport FormValidation from \"../../helper/FormValidation\";\r\nimport AuthRequest from \"../../APIRequest/AuthRequest\";\r\n\r\nconst RegisterUser = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      FullName: \"\",\r\n      UserName: \"\",\r\n      Phone: \"\",\r\n      Email: \"\",\r\n      Password: \"\",\r\n      ConfirmPassword: \"\",\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      FullName: Yup.string().required(\"Full Name is Required\"),\r\n      UserName: Yup.string().required(\"User Name is Required\"),\r\n      Phone: Yup.string()\r\n        .required(\"Mobile Number is Required\")\r\n        .matches(\r\n          /(^(\\+88|0088|88)?(01){1}[3456789]{1}(\\d){8})$/,\r\n          \"Invalid Phone Number\",\r\n        ),\r\n      Email: Yup.string()\r\n        .required(\"Email is Required\")\r\n        .matches(\r\n          /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n          \"Invalid Email address\",\r\n        ),\r\n      Password: Yup.string().required(\"Password is Required\"),\r\n      ConfirmPassword: Yup.string()\r\n        .required(\"Confirm Password is required\")\r\n        .oneOf(\r\n          [Yup.ref(\"Password\"), null],\r\n          \"Passwords and Confirm Password must match\",\r\n        ),\r\n    }),\r\n\r\n    onSubmit: (values) => {\r\n      const { ConfirmPassword, ...postBody } = values;\r\n\r\n      AuthRequest.RegisterUser(postBody).then((result) => {\r\n        if (result) {\r\n          navigate(\"/login\");\r\n        }\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <section className=\"bg-gray-50 dark:bg-gray-900\">\r\n      <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto min-h-screen lg:py-0\">\r\n        <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-xl xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\r\n          <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\r\n            <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\r\n              Create a new account\r\n            </h1>\r\n            <form\r\n              className=\"space-y-4 md:space-y-6\"\r\n              onSubmit={formik.handleSubmit}\r\n            >\r\n              <div className=\"flex flex-wrap mx-[-15px]\">\r\n                <div className=\"px-[15px] w-full md:w-[50%]\">\r\n                  <label\r\n                    htmlFor=\"FullName\"\r\n                    className=\"block my-2 md:my-0 md:mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                  >\r\n                    Full Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"FullName\"\r\n                    id=\"FullName\"\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-600 focus:border-blue-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                    placeholder=\"Mohammad Salman\"\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.FullName}\r\n                  />\r\n                  {formik.touched.FullName &&\r\n                    formik.errors.FullName &&\r\n                    FormValidation.isError(formik.errors.FullName)}\r\n                </div>\r\n\r\n                <div className=\"px-[15px] w-full md:w-[50%]\">\r\n                  <label\r\n                    htmlFor=\"UserName\"\r\n                    className=\"block my-2 md:my-0 md:mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                  >\r\n                    User Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"UserName\"\r\n                    id=\"UserName\"\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-600 focus:border-blue-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                    placeholder=\"Salman23\"\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.UserName}\r\n                  />\r\n                  {formik.touched.UserName &&\r\n                    formik.errors.UserName &&\r\n                    FormValidation.isError(formik.errors.UserName)}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex flex-wrap mx-[-15px]\">\r\n                <div className=\"px-[15px] w-full md:w-[50%]\">\r\n                  <label\r\n                    htmlFor=\"phone\"\r\n                    className=\"block my-2 md:my-0 md:mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                  >\r\n                    Mobile Number\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"Phone\"\r\n                    id=\"phone\"\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-600 focus:border-blue-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                    placeholder=\"+8801880000000\"\r\n                    min={1}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.Phone}\r\n                  />\r\n                  {formik.touched.Phone &&\r\n                    formik.errors.Phone &&\r\n                    FormValidation.isError(formik.errors.Phone)}\r\n                </div>\r\n\r\n                <div className=\"px-[15px] w-full md:w-[50%]\">\r\n                  <label\r\n                    htmlFor=\"email\"\r\n                    className=\"block my-2 md:my-0 md:mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                  >\r\n                    Your Email\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"Email\"\r\n                    id=\"email\"\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-600 focus:border-blue-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                    placeholder=\"name@example.com\"\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.Email}\r\n                  />\r\n                  {formik.touched.Email &&\r\n                    formik.errors.Email &&\r\n                    FormValidation.isError(formik.errors.Email)}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex flex-wrap mx-[-15px]\">\r\n                <div className=\"px-[15px] w-full md:w-[50%]\">\r\n                  <label\r\n                    htmlFor=\"password\"\r\n                    className=\"block my-2 md:my-0 md:mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                  >\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"Password\"\r\n                    id=\"password\"\r\n                    placeholder=\"••••••••\"\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-600 focus:border-blue-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.Password}\r\n                  />\r\n                  {formik.touched.Password &&\r\n                    formik.errors.Password &&\r\n                    FormValidation.isError(formik.errors.Password)}\r\n                </div>\r\n                <div className=\"px-[15px] w-full md:w-[50%]\">\r\n                  <label\r\n                    htmlFor=\"confirm-password\"\r\n                    className=\"block my-2 md:my-0 md:mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                  >\r\n                    Confirm password\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"ConfirmPassword\"\r\n                    id=\"confirm-password\"\r\n                    placeholder=\"••••••••\"\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-600 focus:border-blue-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.ConfirmPassword}\r\n                  />\r\n                  {formik.touched.ConfirmPassword &&\r\n                    formik.errors.ConfirmPassword &&\r\n                    FormValidation.isError(formik.errors.ConfirmPassword)}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-start\">\r\n                <div className=\"flex items-center h-5\">\r\n                  <input\r\n                    id=\"terms\"\r\n                    aria-describedby=\"terms\"\r\n                    type=\"checkbox\"\r\n                    className=\"w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-blue-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-blue-600 dark:ring-offset-gray-800\"\r\n                  />\r\n                </div>\r\n                <div className=\"ml-3 text-sm\">\r\n                  <label\r\n                    htmlFor=\"terms\"\r\n                    className=\"font-light text-gray-500 dark:text-gray-300\"\r\n                  >\r\n                    I accept the{\" \"}\r\n                    <Link\r\n                      className=\"font-medium text-blue-600 hover:underline dark:text-blue-500\"\r\n                      to=\"/terms-and-conditions\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800 cursor-pointer\"\r\n              >\r\n                Create an account\r\n              </button>\r\n              <p className=\"text-sm font-light text-gray-500 dark:text-gray-400\">\r\n                Already have an account?{\" \"}\r\n                <Link\r\n                  to=\"/login\"\r\n                  className=\"font-medium text-blue-600 hover:underline dark:text-blue-500\"\r\n                >\r\n                  Login here\r\n                </Link>\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default RegisterUser;\r\n","class FormValidation {\r\n  static isEmpty(value) {\r\n    return value.length <= 0;\r\n  }\r\n  static isEmail(value) {\r\n    let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    return regexEmail.test(value);\r\n  }\r\n  static isMobile(value) {\r\n    let regexMobile = /(^(\\+88|0088|88)?(01){1}[3456789]{1}(\\d){8})$/;\r\n    return regexMobile.test(value);\r\n  }\r\n\r\n  static isError(value) {\r\n    return (\r\n      <p\r\n        id=\"filled_error_help\"\r\n        className=\"mt-2 text-md text-red-600 dark:text-red-400\"\r\n      >\r\n        {value}\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormValidation;\r\n"],"names":["AuthRequest","postBody","RestClient","data","ToastMessage","message","SessionHelper","Email","store","SetLogin","accessToken","navigate","useNavigate","formik","useFormik","initialValues","FullName","UserName","Phone","Password","ConfirmPassword","validationSchema","Yup","required","matches","oneOf","onSubmit","values","then","result","className","handleSubmit","htmlFor","type","name","id","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","FormValidation","min","to","length","test"],"sourceRoot":""}